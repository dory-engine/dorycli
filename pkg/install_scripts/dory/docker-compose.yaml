version: '3'
services:
  {{- if $.dory.gitRepo.internal.image }}
  {{- if eq $.dory.gitRepo.type "gitea" }}
  {{ $giteaDbPwd := randAlphaNum 16 }}
  {{ $.dory.gitRepo.type }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.gitRepo.internal.image }}
    {{- else }}
    image: {{ $.dory.gitRepo.internal.image }}
    {{- end }}
    container_name: {{ $.dory.gitRepo.type }}
    hostname: {{ $.dory.gitRepo.type }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.gitRepo.type }}:/data
    environment:
      TZ: {{ $.kubernetes.timezone }}
      USER_UID: 1000
      USER_GID: 1000
      GITEA__database__DB_TYPE: "mysql"
      GITEA__database__HOST: {{ $.dory.gitRepo.type }}-mysql:3306
      GITEA__database__NAME: {{ $.dory.gitRepo.type | quote }}
      GITEA__database__USER: {{ $.dory.gitRepo.type | quote }}
      GITEA__database__PASSWD: {{ $giteaDbPwd | quote }}
      GITEA__webhook__ALLOWED_HOST_LIST: "*"
    ports:
      - "{{ $.dory.gitRepo.internal.port }}:3000"
    restart: always
    depends_on:
      - {{ $.dory.gitRepo.type }}-mysql

  {{ $.dory.gitRepo.type }}-mysql:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.gitRepo.internal.imageDB }}
    {{- else }}
    image: {{ $.dory.gitRepo.internal.imageDB }}
    {{- end }}
    container_name: {{ $.dory.gitRepo.type }}-mysql
    hostname: {{ $.dory.gitRepo.type }}-mysql
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.gitRepo.type }}-mysql:/var/lib/mysql
    environment:
      TZ: {{ $.kubernetes.timezone }}
      MYSQL_ROOT_PASSWORD: {{ randAlphaNum 16 | quote }}
      MYSQL_DATABASE: {{ $.dory.gitRepo.type | quote }}
      MYSQL_USER: {{ $.dory.gitRepo.type | quote }}
      MYSQL_PASSWORD: {{ $giteaDbPwd | quote }}
    command: "--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_allowed_packet=268435456"
    restart: always
  {{- else if eq $.dory.gitRepo.type "gitlab" }}
  {{ $.dory.gitRepo.type }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.gitRepo.internal.image }}
    {{- else }}
    image: {{ $.dory.gitRepo.internal.image }}
    {{- end }}
    container_name: {{ $.dory.gitRepo.type }}
    hostname: {{ $.dory.gitRepo.type }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.gitRepo.type }}/config:/etc/gitlab
      - ./{{ $.dory.gitRepo.type }}/logs:/var/log/gitlab
      - ./{{ $.dory.gitRepo.type }}/data:/var/opt/gitlab
    environment:
      TZ: {{ $.kubernetes.timezone }}
    shm_size: '512m'
    restart: always

  nginx-{{ $.dory.gitRepo.type }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.gitRepo.internal.imageNginx }}
    {{- else }}
    image: {{ $.dory.gitRepo.internal.imageNginx }}
      {{- end }}
    container_name: nginx-{{ $.dory.gitRepo.type }}
    hostname: nginx-{{ $.dory.gitRepo.type }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./nginx-{{ $.dory.gitRepo.type }}:/etc/nginx/conf.d
    environment:
      TZ: {{ $.kubernetes.timezone }}
    ports:
      - "{{ $.dory.gitRepo.internal.port }}:8080"
    restart: always

  {{- end }}
  {{- end }}

  {{- if $.artifactRepoInternal }}
  {{- if eq $.dory.artifactRepo.type "nexus" }}
  {{ $.dory.artifactRepo.type }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.artifactRepo.internal.image }}
    {{- else }}
    image: {{ $.dory.artifactRepo.internal.image }}
    {{- end }}
    container_name: {{ $.dory.artifactRepo.type }}
    hostname: {{ $.dory.artifactRepo.type }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.artifactRepo.type }}:/nexus-data
    environment:
      TZ: {{ $.kubernetes.timezone }}
    ports:
      - "{{ $.dory.artifactRepo.internal.port }}:8081"
      - "{{ $.artifactRepoPortHub }}:1443"
      - "{{ $.artifactRepoPortGcr }}:1444"
      - "{{ $.artifactRepoPortQuay }}:1445"
    restart: always
  {{- end }}
  {{- end }}

  {{- if $.scanCodeRepoInternal }}
  {{- if eq $.dory.scanCodeRepo.type "sonarqube" }}
  {{ $sonarqubeDbPwd := randAlphaNum 16 }}
  {{ $.dory.scanCodeRepo.type }}-web:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.scanCodeRepo.internal.image }}
    {{- else }}
    image: {{ $.dory.scanCodeRepo.internal.image }}
    {{- end }}
    container_name: {{ $.dory.scanCodeRepo.type }}-web
    hostname: {{ $.dory.scanCodeRepo.type }}-web
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.scanCodeRepo.type }}-web/extensions:/opt/sonarqube/extensions
      - ./{{ $.dory.scanCodeRepo.type }}-web/data:/opt/sonarqube/data
      - ./{{ $.dory.scanCodeRepo.type }}-web/logs:/opt/sonarqube/logs
      - ./{{ $.dory.scanCodeRepo.type }}-web/temp:/opt/sonarqube/temp
    environment:
      TZ: {{ $.kubernetes.timezone }}
      SONAR_JDBC_USERNAME: "sonar"
      SONAR_JDBC_PASSWORD: {{ $sonarqubeDbPwd | quote }}
      SONAR_JDBC_URL: "jdbc:postgresql://{{ $.dory.scanCodeRepo.type }}-db:5432/sonar"
      SONAR_CE_JAVAOPTS: "-Xmx512m -Xms512m"
    ports:
      - "{{ $.dory.scanCodeRepo.internal.port }}:9000"
    restart: always
    depends_on:
      - {{ $.dory.scanCodeRepo.type }}-db

  {{ $.dory.scanCodeRepo.type }}-db:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.scanCodeRepo.internal.imageDB }}
    {{- else }}
    image: {{ $.dory.scanCodeRepo.internal.imageDB }}
    {{- end }}
    container_name: {{ $.dory.scanCodeRepo.type }}-db
    hostname: {{ $.dory.scanCodeRepo.type }}-db
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.scanCodeRepo.type }}-db:/var/lib/postgresql/data/pgdata
    environment:
      TZ: {{ $.kubernetes.timezone }}
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_USER: "sonar"
      POSTGRES_PASSWORD: {{ $sonarqubeDbPwd | quote }}
    restart: always
  {{- end }}
  {{- end }}

  {{ $.dory.openldap.serviceName }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.openldap.image }}
    {{- else }}
    image: {{ $.dory.openldap.image }}
    {{- end }}
    container_name: {{ $.dory.openldap.serviceName }}
    hostname: {{ $.dory.openldap.serviceName }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.openldap.serviceName }}/data:/var/lib/ldap
      - ./{{ $.dory.openldap.serviceName }}/config:/etc/ldap/slapd.d
      - ./{{ $.dory.openldap.serviceName }}/certs:/container/service/slapd/assets/certs
    environment:
      TZ: {{ $.kubernetes.timezone }}
      LDAP_ADMIN_PASSWORD: {{ $.dory.openldap.password | quote }}
      LDAP_CONFIG_PASSWORD: {{ randAlphaNum 16 | quote }}
      LDAP_DOMAIN: {{ $.dory.openldap.domain | quote }}
      LDAP_BASE_DN: {{ $.dory.openldap.baseDN | quote }}
      LDAP_TLS_VERIFY_CLIENT: try
    restart: always

  ldapadmin:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.openldap.imageAdmin }}
    {{- else }}
    image: {{ $.dory.openldap.imageAdmin }}
    {{- end }}
    container_name: ldapadmin
    hostname: ldapadmin
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
    environment:
      TZ: {{ $.kubernetes.timezone }}
      PHPLDAPADMIN_LDAP_HOSTS: {{ $.dory.openldap.serviceName }}
    ports:
      - "{{ $.dory.openldap.port }}:443"
    restart: always
    depends_on:
      - {{ $.dory.openldap.serviceName }}

  redis-dory:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.redis.image }}
    {{- else }}
    image: {{ $.dory.redis.image }}
    {{- end }}
    container_name: redis-dory
    hostname: redis-dory
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./redis-dory:/data
    environment:
      TZ: {{ $.kubernetes.timezone }}
    command: "--appendonly yes --requirepass {{ $.dory.redis.password }}"
    restart: always

  mongo-dory:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.mongo.image }}
    {{- else }}
    image: {{ $.dory.mongo.image }}
    {{- end }}
    container_name: mongo-dory
    hostname: mongo-dory
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./mongo-dory:/data/db
    environment:
      TZ: {{ $.kubernetes.timezone }}
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: {{ $.dory.mongo.password | quote }}
    restart: always

  {{- $list := (repeat $.dory.docker.dockerNumber "x " | trim | split " ") }}
  {{- range $i, $_ := $list }}
  {{ $idx := ($i | replace "_" "") }}
  {{ $.dory.docker.dockerName }}-{{ $idx }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.docker.image }}
    {{- else }}
    image: {{ $.dory.docker.image }}
    {{- end }}
    container_name: {{ $.dory.docker.dockerName }}-{{ $idx }}
    hostname: {{ $.dory.docker.dockerName }}-{{ $idx }}.{{ $.dory.docker.dockerName }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.docker.dockerName }}/certs:/certs:ro
      - /etc/docker/certs.d/{{ $.imageRepoDomainName }}:/etc/docker/certs.d/{{ $.imageRepoDomainName }}
      - ./{{ $.dory.docker.dockerName }}/daemon.json:/etc/docker/daemon.json
      - ./{{ $.dory.docker.dockerName }}/config.json:/root/.docker/config.json
      - ./dory-engine/dory-data:/dory-engine/dory-data
    environment:
      TZ: {{ $.kubernetes.timezone }}
      DOCKER_TLS_CERTDIR: ""
    command: "--host=tcp://0.0.0.0:2376 --tlsverify --tlscacert=/certs/ca.crt --tlscert=/certs/tls.crt --tlskey=/certs/tls.key"
    {{- if eq $.dory.imageRepo.type "harbor" }}
    extra_hosts:
      - "{{ $.imageRepoDomainName }}:{{ $.imageRepoIp }}"
    {{- end }}
    privileged: true
    restart: always
  {{- end }}

  dory-engine:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/doryengine/dory-engine:{{ $.versionDoryEngine }}-alpine
    {{- else }}
    image: doryengine/dory-engine:{{ $.versionDoryEngine }}-alpine
    {{- end }}
    container_name: dory-engine
    hostname: dory-engine
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./dory-engine/config:/dory-engine/config
      - ./dory-engine/dory-data:/dory-engine/dory-data
      - ./dory-engine/tmp:/dory-engine/tmp
      - ./{{ $.dory.docker.dockerName }}/certs:/certs/docker:ro
    environment:
      TZ: {{ $.kubernetes.timezone }}
    command: "/dory-engine/dory-engine"
    working_dir: /dory-engine
    user: "1000:1000"
    {{- if eq $.dory.imageRepo.type "harbor" }}
    extra_hosts:
      - "{{ $.imageRepoDomainName }}:{{ $.imageRepoIp }}"
    {{- end }}
    restart: always
    depends_on:
      - redis-dory
      - mongo-dory

  dory-console:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/doryengine/dory-console:{{ $.versionDoryFrontend }}
    {{- else }}
    image: doryengine/dory-console:{{ $.versionDoryFrontend }}
    {{- end }}
    container_name: dory-console
    hostname: dory-console
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
    environment:
      TZ: {{ $.kubernetes.timezone }}
    ports:
      - "{{ $.dory.doryengine.port }}:80"
    restart: always
    depends_on:
      - dory-engine

  {{- if $.demoDatabaseInternal }}
  {{ $.dory.demoDatabase.internal.deployName }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.demoDatabase.internal.image }}
    {{- else }}
    image: {{ $.dory.demoDatabase.internal.image }}
    {{- end }}
    container_name: {{ $.dory.demoDatabase.internal.deployName }}
    hostname: {{ $.dory.demoDatabase.internal.deployName }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.demoDatabase.internal.deployName }}:/var/lib/mysql
    environment:
      TZ: {{ $.kubernetes.timezone }}
      MYSQL_ROOT_PASSWORD: {{ $.dory.demoDatabase.internal.password | quote }}
      MYSQL_DATABASE: {{ $.dory.demoDatabase.internal.database | quote }}
      MYSQL_USER: {{ $.demoDatabaseUsername | quote }}
      MYSQL_PASSWORD: {{ $.demoDatabasePassword | quote }}
    command: [ "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--max_allowed_packet=268435456" ]
    ports:
      - "{{ $.dory.demoDatabase.internal.port }}:3306"
    restart: always
  {{- end }}

  {{- if $.demoHostInternal }}
  {{ $.dory.demoHost.internal.deployName }}:
    {{- if eq $.dory.imageRepo.type "harbor" }}
    image: {{ $.imageRepoDomainName }}/hub/{{ $.dory.demoHost.internal.image }}
    {{- else }}
    image: {{ $.dory.demoHost.internal.image }}
    {{- end }}
    container_name: {{ $.dory.demoHost.internal.deployName }}
    hostname: {{ $.dory.demoHost.internal.deployName }}
    volumes:
      - /etc/timezone:/etc/timezone
      - /usr/share/zoneinfo/{{ $.kubernetes.timezone }}:/etc/localtime
      - ./{{ $.dory.demoHost.internal.deployName }}:/data
    environment:
      TZ: {{ $.kubernetes.timezone }}
      ROOT_PASSWORD: {{ $.demoHostPassword | quote }}
    ports:
      - "{{ $.demoHostPort }}:{{ $.dory.demoHost.internal.portSsh }}"
      - "{{ $.demoHostNodePortWeb }}:{{ $.dory.demoHost.internal.portWeb }}"
    restart: always
  {{- end }}
