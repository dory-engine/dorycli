# kubernetes environment name
envName: {{ $.kubernetes.envName | quote }}
# kubernetes environment display name
envDesc: {{ $.kubernetes.envDesc | quote }}
# kubernetes api server ip address
host: {{ $.kubernetes.host | quote }}
# kubernetes apiserver address for external access
viewHost: {{ $.kubernetes.viewHost | quote }}
# kubernetes api server port
port: {{ $.kubernetes.port }}
# kubernetes api server admin token
token: {{ $.kubernetes.token | quote }}
# The base64 encoded string of the ca certificate of the apiserver in the kubernetes environment
caCrtBase64: {{ $.kubernetes.caCrtBase64 | quote }}
# Whether to use insecure mode to connect to the kubernetes environment
insecure: {{ $.kubernetes.insecure }}
# kubernetes dashboard workload browser access url
dashboardUrl: {{ $.kubernetes.dashboardUrl | quote }}
# kubernetes dashboard network policy browser access url
dashboardUrlNetworkPolicy: {{ $.kubernetes.dashboardUrlNetworkPolicy | quote }}
# kubernetes dashboard pod browser access url
dashboardUrlPod: {{ $.kubernetes.dashboardUrlPod | quote }}
# namespace for istio service mesh deployment in kubernetes environment
istioNamespace: {{ $.kubernetes.istioNamespace | quote }}
# namespace for ingress controller in kubernetes environment
ingressControllerNamespace: {{ $.kubernetes.ingressControllerNamespace | quote }}
# kubernetes timezone settings
timezone: {{ $.kubernetes.timezone | quote }}
# the range of nodePort available ports that the kubernetes environment can assign to the project
nodePortRange:
  # available nodePort start port
  nodePortRangeStart: 30100
  # available nodePort end port
  nodePortRangeEnd: 32767
# cpu architectures settings for the environment
archSettings:
  # cpu architecture name
  - arch: amd64
    # cpu architecture node selector
    nodeSelector:
      kubernetes.io/arch: amd64
      kubernetes.io/os: linux
  - arch: arm64v8
    nodeSelector:
      kubernetes.io/arch: arm64
      kubernetes.io/os: linux
# project data pod is use for create project application directory in persistent volume
projectDataPod:
  # pod's namespace
  namespace: {{ $.dory.namespace }}
  # statefulset name
  statefulSetName: project-data-pod
  # project applications root directory
  path: /project-data

# pod image settings
podImageSettings:
  # project-data-pod image
  projectDataPodImage: "{{ if eq $.dory.imageRepo.type "harbor" }}{{ $.imageRepoDomainName }}/public/{{ else }}doryengine/{{ end }}alpine:3.17.2-dory"
  # busybox image
  busyboxImage: "{{ if eq $.dory.imageRepo.type "harbor" }}{{ $.imageRepoDomainName }}/public/{{ else }}{{ end }}busybox:latest"

# use external hostname or ip address to connect image repository
imageRepoUseExternal: false
# use external hostname or ip address to connect artifact and dependency repository
artifactRepoUseExternal: false

{{- if $.kubernetes.pvConfigLocal.localPath }}
# if persistent volume use local storage, please set it, otherwise remove it
pvConfigLocal:
  # local path (absolute path)
  localPath: {{ $.kubernetes.pvConfigLocal.localPath | quote }}
{{- else }}
# # if persistent volume use local storage, please set it, otherwise remove it
# pvConfigLocal:
#   # local path (absolute path)
#   localPath: "/data/k8s-vols"
{{- end }}

{{- if $.kubernetes.pvConfigNfs.nfsPath }}
# if persistent volume use nfs shared storage, please set it, otherwise remove it
pvConfigNfs:
  # nfs storage path (absolute path)
  nfsPath: {{ $.kubernetes.pvConfigNfs.nfsPath | quote }}
  # nfs server ip address
  nfsServer: {{ $.kubernetes.pvConfigNfs.nfsServer | quote }}
{{- else }}
# # if persistent volume use nfs shared storage, please set it, otherwise remove it
# pvConfigNfs:
#   # nfs storage path (absolute path)
#   nfsPath: "/data/nfs-vols/k8s-vols"
#   # nfs server ip address
#   nfsServer: "10.2.0.10"
{{- end }}

{{- if $.kubernetes.pvConfigCephfs.cephPath }}
# if persistent volume use cephfs shared storage, please set it, otherwise remove it
pvConfigCephfs:
  # cephfs storage path
  cephPath: {{ $.kubernetes.pvConfigCephfs.cephPath | quote }}
  # ceph connect account
  cephUser: {{ $.kubernetes.pvConfigCephfs.cephUser | quote }}
  # ceph connect secret
  cephSecret: {{ $.kubernetes.pvConfigCephfs.cephSecret | quote }}
  # ceph monitors ip address
  cephMonitors:
  {{ range $_, $cephMonitor := $.kubernetes.pvConfigCephfs.cephMonitors }}
  - {{ $cephMonitor | quote }}
  {{ end }}
{{- else }}
# # if persistent volume use cephfs shared storage, please set it, otherwise remove it
# pvConfigCephfs:
#   # cephfs storage path
#   cephPath: "/k8s-deploy"
#   # ceph connect account
#   cephUser: "admin"
#   # ceph connect secret
#   cephSecret: "XXXXX"
#   # ceph monitors ip address
#   cephMonitors:
#   - "192.168.0.1:6789"
#   - "192.168.0.2:6789"
#   - "192.168.0.3:6789"
{{- end }}

{{- if or $.kubernetes.pvConfigCsiNfs.nfsPath $.kubernetes.pvConfigCsiCephfs.cephPath }}
# if persistent volumes uses csi, please set it, otherwise please delete the following configuration
pvConfigCsi:
  # csi storage name, currently built-in support for csi-nfs csi-cephfs two csi storage
  {{- if $.kubernetes.pvConfigCsiNfs.nfsPath }}
  envCsiName: csi-nfs
  {{- else if $.kubernetes.pvConfigCsiCephfs.cephPath }}
  envCsiName: csi-cephfs
  {{- end }}
  # csi storage parameter configuration
  {{- if $.kubernetes.pvConfigCsiNfs.nfsPath }}
  envCsiParams: |
    server: {{ $.kubernetes.pvConfigCsiNfs.nfsServer }}
    share: {{ $.kubernetes.pvConfigCsiNfs.nfsPath }}
    {{- if $.kubernetes.pvConfigCsiNfs.nfsMountOptions }}
    mountOptions:
    {{- range $_, $v := $.kubernetes.pvConfigCsiNfs.nfsMountOptions }}
    - {{ $v }}
    {{- end }}
    {{- end }}
  {{- else if $.kubernetes.pvConfigCsiCephfs.cephPath }}
  envCsiParams: |
    adminID: {{ $.kubernetes.pvConfigCsiCephfs.cephUser }}
    adminKey: {{ $.kubernetes.pvConfigCsiCephfs.cephSecret }}
    fsName: {{ $.kubernetes.pvConfigCsiCephfs.cephFsName }}
    clusterID: {{ $.kubernetes.pvConfigCsiCephfs.cephClusterId }}
    rootPath: {{ $.kubernetes.pvConfigCsiCephfs.cephPath }}
  {{- end }}
{{- else }}
# # if persistent storage uses csi, please set it, otherwise please delete the following configuration
# pvConfigCsi:
#   # csi template name, currently built-in support csi-nfs csi-cephfs two csi storage
#   envCsiName: csi-nfs
#   # csi volumes parameter configuration
#   envCsiParams: |
#     # in the case of csi-nfs, the parameter format is as follows:
#     server: 192.168.0.1
#     share: /data/nfs-share
#     mountOptions:
#     - nfsvers=4.1
#     # in the case of csi-cephfs, the parameter format is as follows:
#     adminID: admin
#     adminKey: xxx
#     fsName: your_filesystem_name
#     clusterID: xxxx
#     rootPath: /your_cephfs_path
{{- end }}

# project applications deployment kubernetes node selector, format: (labelName: labelValue)
projectNodeSelector: {}

# kubernetes project namespace resource quota and pod default resource usage settings
quotaConfig:
  # pod default resource usage settings
  defaultQuota:
    # pod default memory request setting (100Mi means 100M memory, 1Gi means 1G memory)
    memoryRequest: 20Mi
    # pod default cpu request setting (100m means 0.1 core cpu)
    cpuRequest: 10m
    # pod default memory max limit setting (100Mi means 100M memory, 1Gi means 1G memory)
    memoryLimit: 50Mi
    # pod default cpu max limit setting (100m means 0.1 core cpu)
    cpuLimit: 50m
  # project namespace total resource quota settings
  namespaceQuota:
    # project namespace total memory request quota (100Mi means 100M memory, 1Gi means 1G memory)
    memoryRequest: 1Gi
    # project namespace total cpu request quota (100m means 0.1 core cpu)
    cpuRequest: 1000m
    # project namespace total memory max limit quota (100Mi means 100M memory, 1Gi means 1G memory)
    memoryLimit: 4Gi
    # project namespace total cpu max limit quota (100m means 0.1 core cpu)
    cpuLimit: 4000m
    # project namespace total pods number limit
    podsLimit: 32
