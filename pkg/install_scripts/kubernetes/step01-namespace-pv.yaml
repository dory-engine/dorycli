---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $.currentNamespace }}
  labels:
    ns: {{ $.currentNamespace }}

{{- if eq $.dory.imageRepo.type "harbor" }}
{{- $harborDockerConfigJson := printf `{"auths": {"%s": {"username": "%s", "password": "%s", "email": "%s", "auth": "%s"}}}` $.imageRepoDomainName $.imageRepoUsername $.imageRepoPassword $.imageRepoEmail (printf "%s:%s" $.imageRepoUsername $.imageRepoPassword | b64enc) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.imageRepoDomainName }}
  namespace: {{ $.currentNamespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {{ $harborDockerConfigJson | b64enc | nindent 4 }}
{{- end }}

{{- if eq $.dory.artifactRepo.type "nexus"}}
{{- $nexusDockerhubConfigJson := printf `{"auths": {"%s:%d": {"username": "%s", "password": "%s", "email": "%s", "auth": "%s"}}}` $.artifactRepoIp $.artifactRepoPortHub $.artifactRepoPublicUser $.artifactRepoPublicPassword $.artifactRepoPublicEmail (printf "%s:%s" $.artifactRepoPublicUser $.artifactRepoPublicPassword | b64enc) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nexus-hub
  namespace: {{ $.currentNamespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {{ $nexusDockerhubConfigJson | b64enc | nindent 4 }}

{{- $nexusGcrConfigJson := printf `{"auths": {"%s:%d": {"username": "%s", "password": "%s", "email": "%s", "auth": "%s"}}}` $.artifactRepoIp $.artifactRepoPortGcr $.artifactRepoPublicUser $.artifactRepoPublicPassword $.artifactRepoPublicEmail (printf "%s:%s" $.artifactRepoPublicUser $.artifactRepoPublicPassword | b64enc) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nexus-gcr
  namespace: {{ $.currentNamespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {{ $nexusGcrConfigJson | b64enc | nindent 4 }}

{{- $nexusQuayConfigJson := printf `{"auths": {"%s:%d": {"username": "%s", "password": "%s", "email": "%s", "auth": "%s"}}}` $.artifactRepoIp $.artifactRepoPortQuay $.artifactRepoPublicUser $.artifactRepoPublicPassword $.artifactRepoPublicEmail (printf "%s:%s" $.artifactRepoPublicUser $.artifactRepoPublicPassword | b64enc) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nexus-quay
  namespace: {{ $.currentNamespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {{ $nexusQuayConfigJson | b64enc | nindent 4 }}
{{- end }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $.currentNamespace }}-timezone-pv
  labels:
    app: {{ $.currentNamespace }}-timezone
spec:
  storageClassName: {{ $.currentNamespace }}-timezone-pv
  capacity:
    storage: 1Gi
  accessModes:
    - ReadOnlyMany
  {{- if $.kubernetes.pvConfigLocal.localPath }}
  hostPath:
    path: {{ $.kubernetes.pvConfigLocal.localPath }}/timezone
    type: DirectoryOrCreate
  {{- else if $.kubernetes.pvConfigCephfs.cephPath }}
  cephfs:
    path: {{ $.kubernetes.pvConfigCephfs.cephPath }}/timezone
    user: {{ $.kubernetes.pvConfigCephfs.cephUser }}
    monitors:
    {{- range $_, $monitor := $.kubernetes.pvConfigCephfs.cephMonitors }}
    - {{ $monitor | quote }}
    {{- end }}
    secretRef:
      name: cephfs-secret
      namespace: {{ $.currentNamespace }}
    readOnly: true
  {{- else if $.kubernetes.pvConfigNfs.nfsServer }}
  nfs:
    path: {{ $.kubernetes.pvConfigNfs.nfsPath }}/timezone
    server: {{ $.kubernetes.pvConfigNfs.nfsServer }}
    readOnly: true
  {{- end }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $.currentNamespace }}-timezone-pvc
  namespace: {{ $.currentNamespace }}
spec:
  accessModes:
    - ReadOnlyMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ $.currentNamespace }}-timezone-pv
  selector:
    matchLabels:
      app: {{ $.currentNamespace }}-timezone

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $.currentNamespace }}-pv
  labels:
    app: {{ $.currentNamespace }}
spec:
  storageClassName: {{ $.currentNamespace }}-pv
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  {{- if $.kubernetes.pvConfigLocal.localPath }}
  hostPath:
    path: {{ $.kubernetes.pvConfigLocal.localPath }}/{{ $.currentNamespace }}
    type: DirectoryOrCreate
  {{- else if $.kubernetes.pvConfigCephfs.cephPath }}
  cephfs:
    path: {{ $.kubernetes.pvConfigCephfs.cephPath }}/{{ $.currentNamespace }}
    user: {{ $.kubernetes.pvConfigCephfs.cephUser }}
    monitors:
    {{- range $_, $monitor := $.kubernetes.pvConfigCephfs.cephMonitors }}
    - {{ $monitor | quote }}
    {{- end }}
    secretRef:
      name: cephfs-secret
      namespace: {{ $.kubernetes.project.projectInfo.projectName }}
    readOnly: false
  {{- else if $.kubernetes.pvConfigNfs.nfsServer }}
  nfs:
    path: {{ $.kubernetes.pvConfigNfs.nfsPath }}/{{ $.currentNamespace }}
    server: {{ $.kubernetes.pvConfigNfs.nfsServer }}
    readOnly: false
  {{- end }}

{{- if $.kubernetes.pvConfigCephfs.cephPath }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cephfs-secret
  namespace: {{ $.currentNamespace }}
data:
  key: {{ $.kubernetes.pvConfigCephfs.cephSecret | b64enc }}
{{- end }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $.currentNamespace }}-pvc
  namespace: {{ $.currentNamespace }}
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 500Gi
  storageClassName: {{ $.currentNamespace }}-pv
  selector:
    matchLabels:
      app: {{ $.currentNamespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-timezone
  namespace: {{ $.currentNamespace }}
data:
  timezone: {{ $.kubernetes.timezone }}
